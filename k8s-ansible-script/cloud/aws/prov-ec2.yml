---
### provision AWS EC2 instance
- hosts: localhost
  connection: local
  gather_facts: false
  user: root
  pre_tasks:
    - include_vars: variables.yml
  tasks:
    - name: Provision {{ ec2_count }} instances with tag kubernetes.io/cluster/enn-cluster
      local_action:
        module: ec2
        key_name: "{{ ec2_keypair }}"
        group_id: "{{ ec2_security_group_id }}"
        instance_type: "{{ ec2_instance_type }}"
        image: "{{ ec2_image }}"
        vpc_subnet_id: "{{ ec2_subnet_id }}"
        region: "{{ ec2_region }}"
        instance_tags: '{"Type":"{{ec2_instance_type}}", "Role":"{{ec2_tag_Role}}", "kubernetes.io/cluster/enn-cluster":"enn-cluster"}'
        #assign_public_ip: yes
        wait: true
        #count: "{{ ec2_count }}"
        exact_count: "{{ ec2_count }}"
        count_tag:
          Role: "{{ ec2_tag_Role }}"
          kubernetes.io/cluster/enn-cluster: enn-cluster
        volumes:
          - device_name: /dev/sda1
            volume_type: gp2
            volume_size: 200 #GB
            delete_on_termination: true
          - device_name: /dev/sdb
            volume_type: gp2
            volume_size: "{{ ec2_volume_size_sdb }}"
            delete_on_termination: true
          - device_name: /dev/sdc
            volume_type: gp2
            volume_size: "{{ ec2_volume_size_sdc }}"
            delete_on_termination: true
      register: ec2

    - add_host:
        hostname: "{{ item.public_ip }}"
        groups: ansible-webserver
        ec2_region: "{{ ec2_region }}"
        ec2_tag_Type: "{{ ec2_tag_Type}}"
        ec2_tag_Role: "{{ ec2_tag_Role }}"
        ec2_ip_address: "{{ item.public_ip }}"
      with_items: "{{ ec2.instances }}"

    - name: Wait for the instances to boot by checking the ssh port
      wait_for: host={{item.public_ip}} port=22 delay=15 timeout=300 state=started
      with_items: "{{ ec2.instances }}"

  post_tasks:
    - name: refresh cache
      shell: ./ec2.py --refresh-cache

    - name: refresh hosts inventory list
      meta: refresh_inventory

    - name: register inventory list
      command:  ./ec2.py --list
      register: list

    - name: write master_list to cluster.yml
      lineinfile:
        path: ../k8s-cluster/clusters/aws/cluster.yml
        regexp: 'master_list'
        line: "    master_list: [{{ (list.stdout | from_json | json_query('tag_kubernetes_io_cluster_enn_cluster_enn_cluster')).0 }}, {{ (list.stdout | from_json | json_query('tag_kubernetes_io_cluster_enn_cluster_enn_cluster')).1 }}, {{ (list.stdout | from_json | json_query('tag_kubernetes_io_cluster_enn_cluster_enn_cluster')).2 }}]"

    - name: write etcd_init_servers to cluster.yml
      lineinfile:
        path: ../k8s-cluster/clusters/aws/cluster.yml
        regexp: 'etcd_init_servers'
        line: "    etcd_init_servers: [{{ (list.stdout | from_json | json_query('tag_kubernetes_io_cluster_enn_cluster_enn_cluster')).0 }}, {{ (list.stdout | from_json | json_query('tag_kubernetes_io_cluster_enn_cluster_enn_cluster')).1 }}, {{ (list.stdout | from_json | json_query('tag_kubernetes_io_cluster_enn_cluster_enn_cluster')).2 }}]"

    - name: write flannel_etcd_list to cluster.yml
      lineinfile:
        path: ../k8s-cluster/clusters/aws/cluster.yml
        regexp: 'flannel_etcd_list'
        line: "    flannel_etcd_list: [{{ (list.stdout | from_json | json_query('tag_kubernetes_io_cluster_enn_cluster_enn_cluster')).0 }}, {{ (list.stdout | from_json | json_query('tag_kubernetes_io_cluster_enn_cluster_enn_cluster')).1 }}, {{ (list.stdout | from_json | json_query('tag_kubernetes_io_cluster_enn_cluster_enn_cluster')).2 }}]"

    - name: write ca_vip to cluster.yml
      lineinfile:
        path: ../k8s-cluster/clusters/aws/cluster.yml
        regexp: 'ca_vip'
        line: "    ca_vip: [{{ (list.stdout | from_json | json_query('tag_kubernetes_io_cluster_enn_cluster_enn_cluster')).0 }}]"

    - name: write host_path_list to cluster.yml
      lineinfile:
        path: ../k8s-cluster/clusters/aws/cluster.yml
        regexp: 'host_path_list'
        line: "    host_path_list: [{%  for host in (list.stdout | from_json | json_query('tag_kubernetes_io_cluster_enn_cluster_enn_cluster')) %}{{ host }}{% if not loop.last %}, {% endif %}{% endfor %}]"


    - name: write hosts to cluster.yml
      lineinfile:
        line: "        {{ item }}:"
        dest: ../k8s-cluster/clusters/aws/cluster.yml
      with_items: "{{ (list.stdout | from_json).tag_kubernetes_io_cluster_enn_cluster_enn_cluster }}"