- name: create /monitor
  file: path=/monitor state=directory

# - name: copy images
#   copy:
#     src: "../files/images/monitor/{{ item.src }}"
#     dest: "{{ item.dest }}"
#   with_items:
#     - {src: service-server.tar, dest: /monitor}
#     - {src: service-web.tar, dest: /monitor}

# - name: load docker images
#   command: docker load -i /monitor/{{ item }}
#   with_items:
#     - service-server.tar
#     - service-web.tar

# - name: push image to registry
#   command: "{{ item }}"
#   with_items:
#     - echo "nonsense" | docker login -uadmin -p{{ harbor_admin_password }} {{ registry_url }}
#     - docker push {{ registry_url }}/{{monitor_config_service_server_image}}
#     - docker push {{ registry_url }}/{{monitor_config_service_web_image}}

- name: copy files
  template:
    src: "templates/{{item.src}}"
    dest: "{{ item.dest }}"
  with_items:
    - {src: enn-monitor-config-service-server-svc.yml, dest: /monitor}
    - {src: enn-monitor-config-service-server-rc.yml, dest: /monitor}
    - {src: enn-monitor-config-service-web-svc.yml, dest: /monitor}
    - {src: enn-monitor-config-service-web-rc.yml, dest: /monitor}

- name: create config
  command: ennctl create -a {{ monitor_config_service_app }} -f /monitor/{{ item }}
  with_items:
   - enn-monitor-config-service-server-svc.yml
   - enn-monitor-config-service-server-rc.yml
   - enn-monitor-config-service-web-svc.yml
   - enn-monitor-config-service-web-rc.yml

- name: test
  shell: curl -X GET 'http://{{ master_list[0] }}:{{monitor_config_service_web_externport}}/enn-monitor-config-service-web/serviceLine/insert/insert?serviceLineName=aaatest&status=0&createUser=micklongen'
  register: result
  until: result.stdout.find("aaatest") != -1
  retries: 10
  delay: 10

- name: create ServiceLine
  command: curl -X GET 'http://{{ master_list[0] }}:{{monitor_config_service_web_externport}}/enn-monitor-config-service-web/serviceLine/insert/insert?serviceLineName={{item}}&status=0&createUser=micklongen'
  with_items:
   - Monitor