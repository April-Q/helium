{
  audit_clear: {
    storage_limit: {{ audit_clear.storage_limit }},
    table_limit: {{ audit_clear.table_limit }},
    clear_percent: {{ audit_clear.clear_percent }},
  },
  ceph: {
    enable: {{ ceph_enabled }},
    health: {
      service: "{{ ceph.health.service }}",
      port: "{{ ceph.health.port }}",
    },
    admin_keyring: "{{ ceph_admin_keyring }}",
    admin_user: "{{ ceph.admin_user }}",
    console_keyring_base64: "{{ ceph_console_keyring }}",
    monitors_without_port: [{% for host in mon_list %}"{{ host }}"{% if not loop.last %},{% endif %}{% endfor %}],
    monitors: [{% for host in mon_list %}"{{ host }}:6789"{% if not loop.last %},{% endif %}{% endfor %}],
    monitor_urls: "{% for host in mon_list %}{{ host }}:6789{% if not loop.last %},{% endif %}{% endfor %}",
  },
  confidential: {
    appautoscale: {
      username: "{{ confidential.appautoscale.username }}",
      password: "{{ confidential.appautoscale.password }}",
    },
    elastic_search: {
      username: "{{ confidential.elastic_search.username }}",
      password: "{{ confidential.elastic_search.password }}",
    },
    harbor: {
      username: "{{ confidential.harbor.username }}",
      password: "{{ confidential.harbor.password }}",
    },
    keycloak: {
      username: "{{ confidential.keycloak.username }}",
      password: "{{ confidential.keycloak.password }}",
    },
    keystone: {
      username: "{{ confidential.keystone.username }}",
      password: "{{ confidential.keystone.password }}",
    },
    k8s: {
      username: "{{ admin_username }}",
      password: "{{ admin_password }}",
    },
    mysql: {
      username: "{{ confidential.mysql.username }}",
      password: "{{ confidential.mysql.password }}",
    },
    rabbitmq: {
      username: "{{ confidential.rabbitmq.username }}",
      password: "{{ confidential.rabbitmq.password }}",
    },
    redis: {
      username: "{{ confidential.redis.username }}",
      password: "{{ confidential.redis.password }}",
    },
    scheduler: {
      username: "{{ confidential.scheduler.username }}",
      password: "{{ confidential.scheduler.password }}",
    },
  },
  global: {
    vip: "{{ global.vip }}",
    public_vip: "{{ global.public_vip }}",
    title_cn: "{{ title_cn }}",
    title_en: "{{ title_en }}",
    cluster_name: "{{ cluster_name }}",
    console_domain_name: "{{ global.public_vip }}:{{ node_port.console }}",
    commandline_enable: "true",
    auth_enable: "{{ auth_enabled }}",
    version: "{{ console_version }}",
    location: "prod",
  },
  keycloak_config: {
  realm: "console-sso",
  client: {
    console: "console",
    ennctl: "ennctl",
    lmd: "lmd",
    scale: "scale-console",
  },
},
  node_ports: {
    console: "{{ node_port.console }}",
    gateway_https: "{{ node_port.gateway_https }}",
    gateway_http: "{{ node_port.gateway_http }}",
    gitbook: "{{ node_port.gitbook }}",
    harbor: "{{ node_port.harbor }}",
    keycloak: "{{ node_port.keycloak }}",
    local_repository: "{{ node_port.local_repository }}",
    lmb: "{{ node_port.lmd }}",
    scale: "{{ node_port.scaler }}",
    rgw: "{{ node_port.rgw }}",
    terminal: "{{ node_port.terminal }}",
  },
  replicas: {
    gateway: 1,
    backend: 1,
  },
  nfs: {
    enable: {{ nfs_enabled }},
    server: "{{ nfs_host}}",
    server_dir: "{{ nfs_path }}",
    args: "{{ nfs_property }}",
  },
  s3: {
    enable: {{ s3_enabled }},
    host: "{{ s3_host }}",
    access_key: "{{ s3_access_key }}",
    secret_key: "{{ s3_secret_key }}",
    app_id: "{{ s3_app_id }}",
  },
  namespaces: {
    ceph: "{{ namespace.ceph }}",
    console: "{{ namespace.console }}",
    elastic_search: "{{ namespace.bigdata }}",
    gateway: "{{ namespace.system_tools }}",
    k8s: "{{ namespace.default }}",
    keystone: "{{ namespace.system_tools }}",
    keycloak: "{{ namespace.console }}",
    kube_system: "{{ namespace.kube_system }}",
    ldap: "{{ namespace.system_tools }}",
    log_archive: "{{ namespace.monitor }}",
    opentsdb: "{{ namespace.bigdata }}",
    prometheus: "{{ namespace.monitor }}",
  },
  registry: {
    host: "{{ registry_host }}",
    port: {{ node_port.harbor }},
    project: "{{ harbor_project }}",
  },
  scheduler: {
    host: "enndata-scheduler-nsnodeselector-svc.k8splugin",
    port: "8843",
  },
  resource: {
    account: {
      requests_cpu: "{{ resource.account.requests_cpu }}",
      requests_memory: "{{ resource.account.requests_memory }}",
      limits_cpu: "{{ resource.account.limits_cpu }}",
      limits_memory: "{{ resource.account.limits_memory }}",
      probe: {{ resource.account.probe }},
    },
    ansible: {
      requests_cpu: "{{ resource.ansible.requests_cpu }}",
      requests_memory: "{{ resource.ansible.requests_memory }}",
      limits_cpu: "{{ resource.ansible.limits_cpu }}",
      limits_memory: "{{ resource.ansible.limits_memory }}",
      probe: {{ resource.account.probe }},
    },
    audit: {
      requests_cpu: "{{ resource.audit.requests_cpu }}",
      requests_memory: "{{ resource.audit.requests_memory }}",
      limits_cpu: "{{ resource.audit.limits_cpu }}",
      limits_memory: "{{ resource.audit.limits_memory }}",
      probe: {{ resource.audit.probe }},
    },
    backend: {
      requests_cpu: "{{ resource.backend.requests_cpu }}",
      requests_memory: "{{ resource.backend.requests_memory }}",
      limits_cpu: "{{ resource.backend.limits_cpu }}",
      limits_memory: "{{ resource.backend.limits_memory }}",
      probe: {{ resource.backend.probe }},
    },
    config_server: {
      requests_cpu: "{{ resource.config_server.requests_cpu }}",
      requests_memory: "{{ resource.config_server.requests_memory }}",
      limits_cpu: "{{ resource.config_server.limits_cpu }}",
      limits_memory: "{{ resource.config_server.limits_memory }}",
      probe: {{ resource.config_server.probe }},
    },
    console: {
      requests_cpu: "{{ resource.console.requests_cpu }}",
      requests_memory: "{{ resource.console.requests_memory }}",
      limits_cpu: "{{ resource.console.limits_cpu }}",
      limits_memory: "{{ resource.console.limits_memory }}",
      probe: {{ resource.console.probe }},
    },
    dependency_checker: {
      requests_cpu: "{{ resource.dependency_checker.requests_cpu }}",
      requests_memory: "{{ resource.dependency_checker.requests_memory }}",
      limits_cpu: "{{ resource.dependency_checker.limits_cpu }}",
      limits_memory: "{{ resource.dependency_checker.limits_memory }}",
      probe: {{ resource.dependency_checker.probe }},
    },
    etcd: {
      requests_cpu: "{{ resource.etcd.requests_cpu }}",
      requests_memory: "{{ resource.etcd.requests_memory }}",
      limits_cpu: "{{ resource.etcd.limits_cpu }}",
      limits_memory: "{{ resource.etcd.limits_memory }}",
    },
    harbor: {
      requests_cpu: "{{ resource.harbor.requests_cpu }}",
      requests_memory: "{{ resource.harbor.requests_memory }}",
      limits_cpu: "{{ resource.harbor.limits_cpu }}",
      limits_memory: "{{ resource.harbor.limits_memory }}",
      probe: {{ resource.harbor.probe }},
    },
    initializer: {
      requests_cpu: "{{ resource.initializer.requests_cpu }}",
      requests_memory: "{{ resource.initializer.requests_memory }}",
      limits_cpu: "{{ resource.initializer.limits_cpu }}",
      limits_memory: "{{ resource.initializer.limits_memory }}",
      probe: {{ resource.initializer.probe }},
    },
    gateway: {
      requests_cpu: "{{ resource.gateway.requests_cpu }}",
      requests_memory: "{{ resource.gateway.requests_memory }}",
      limits_cpu: "{{ resource.gateway.limits_cpu }}",
      limits_memory: "{{ resource.gateway.limits_memory }}",
      probe: {{ resource.gateway.probe }},
    },
    gc: {
      requests_cpu: "{{ resource.gc.requests_cpu }}",
      requests_memory: "{{ resource.gc.requests_memory }}",
      limits_cpu: "{{ resource.gc.limits_cpu }}",
      limits_memory: "{{ resource.gc.limits_memory }}",
      probe: {{ resource.gc.probe }},
    },
    gitbook: {
      requests_cpu: "{{ resource.gitbook.requests_cpu }}",
      requests_memory: "{{ resource.gitbook.requests_memory }}",
      limits_cpu: "{{ resource.gitbook.limits_cpu }}",
      limits_memory: "{{ resource.gitbook.limits_memory }}",
      probe: {{ resource.gc.probe }},
    },
    keycloak: {
      requests_cpu: "{{ resource.keycloak.requests_cpu }}",
      requests_memory: "{{ resource.keycloak.requests_memory }}",
      limits_cpu: "{{ resource.keycloak.limits_cpu }}",
      limits_memory: "{{ resource.keycloak.limits_memory }}",
      probe: {{ resource.keycloak.probe }},
    },
    kubeorigin: {
      requests_cpu: "{{ resource.kubeorigin.requests_cpu }}",
      requests_memory: "{{ resource.kubeorigin.requests_memory }}",
      limits_cpu: "{{ resource.kubeorigin.limits_cpu }}",
      limits_memory: "{{ resource.kubeorigin.limits_memory }}",
      probe: {{ resource.kubeorigin.probe }},
    },
    local_repository: {
      requests_cpu: "{{ resource.local_repository.requests_cpu }}",
      requests_memory: "{{ resource.local_repository.requests_memory }}",
      limits_cpu: "{{ resource.local_repository.limits_cpu }}",
      limits_memory: "{{ resource.local_repository.limits_memory }}",
    },
    log: {
      requests_cpu: "{{ resource.log.requests_cpu }}",
      requests_memory: "{{ resource.log.requests_memory }}",
      limits_cpu: "{{ resource.log.limits_cpu }}",
      limits_memory: "{{ resource.log.limits_memory }}",
      probe: {{ resource.log.probe }},
    },
    lmd: {
      requests_cpu: "{{ resource.lmd.requests_cpu }}",
      requests_memory: "{{ resource.lmd.requests_memory }}",
      limits_cpu: "{{ resource.lmd.limits_cpu }}",
      limits_memory: "{{ resource.lmd.limits_memory }}",
      probe: {{ resource.lmd.probe }},
    },
    metric: {
      requests_cpu: "{{ resource.metric.requests_cpu }}",
      requests_memory: "{{ resource.metric.requests_memory }}",
      limits_cpu: "{{ resource.metric.limits_cpu }}",
      limits_memory: "{{ resource.metric.limits_memory }}",
      probe: {{ resource.metric.probe }},
    },
    mongo: {
      requests_cpu: "{{ resource.mongo.requests_cpu }}",
      requests_memory: "{{ resource.mongo.requests_memory }}",
      limits_cpu: "{{ resource.mongo.limits_cpu }}",
      limits_memory: "{{ resource.mongo.limits_memory }}",
    },
    mysql: {
      requests_cpu: "{{ resource.mysql.requests_cpu }}",
      requests_memory: "{{ resource.mysql.requests_memory }}",
      limits_cpu: "{{ resource.mysql.limits_cpu }}",
      limits_memory: "{{ resource.mysql.limits_memory }}",
    },
    notification: {
      requests_cpu: "{{ resource.notification.requests_cpu }}",
      requests_memory: "{{ resource.notification.requests_memory }}",
      limits_cpu: "{{ resource.notification.limits_cpu }}",
      limits_memory: "{{ resource.notification.limits_memory }}",
      probe: {{ resource.notification.probe }},
    },
    rabbitmq: {
      requests_cpu: "{{ resource.rabbitmq.requests_cpu }}",
      requests_memory: "{{ resource.rabbitmq.requests_memory }}",
      limits_cpu: "{{ resource.rabbitmq.limits_cpu }}",
      limits_memory: "{{ resource.rabbitmq.limits_memory }}",
    },
    redis: {
      requests_cpu: "{{ resource.redis.requests_cpu }}",
      requests_memory: "{{ resource.redis.requests_memory }}",
      limits_cpu: "{{ resource.redis.limits_cpu }}",
      limits_memory: "{{ resource.redis.limits_memory }}",
    },
    scale_console: {
      requests_cpu: "{{ resource.scale_console.requests_cpu }}",
      requests_memory: "{{ resource.scale_console.requests_memory }}",
      limits_cpu: "{{ resource.scale_console.limits_cpu }}",
      limits_memory: "{{ resource.scale_console.limits_memory }}",
      probe: {{ resource.scale_console.probe }},
    },
    storage: {
      requests_cpu: "{{ resource.storage.requests_cpu }}",
      requests_memory: "{{ resource.storage.requests_memory }}",
      limits_cpu: "{{ resource.storage.limits_cpu }}",
      limits_memory: "{{ resource.storage.limits_memory }}",
      probe: {{ resource.storage.probe }},
    },
    storage_listener: {
      requests_cpu: "{{ resource.storage_listener.requests_cpu }}",
      requests_memory: "{{ resource.storage_listener.requests_memory }}",
      limits_cpu: "{{ resource.storage_listener.limits_cpu }}",
      limits_memory: "{{ resource.storage_listener.limits_memory }}",
      probe: {{ resource.storage_listener.probe }},
    },
    watch: {
      requests_cpu: "{{ resource.watch.requests_cpu }}",
      requests_memory: "{{ resource.watch.requests_memory }}",
      limits_cpu: "{{ resource.watch.limits_cpu }}",
      limits_memory: "{{ resource.watch.limits_memory }}",
      probe: {{ resource.watch.probe }},
    },
    template: {
      requests_cpu: "{{ resource.template.requests_cpu }}",
      requests_memory: "{{ resource.template.requests_memory }}",
      limits_cpu: "{{ resource.template.limits_cpu }}",
      limits_memory: "{{ resource.template.limits_memory }}",
      probe: {{ resource.template.probe }},
    },
    terminal: {
      requests_cpu: "{{ resource.terminal.requests_cpu }}",
      requests_memory: "{{ resource.terminal.requests_memory }}",
      limits_cpu: "{{ resource.terminal.limits_cpu }}",
      limits_memory: "{{ resource.terminal.limits_memory }}",
      probe: {{ resource.terminal.probe }},
    },
  },
{% if ceph_enabled == "true"%}
  storage_config: {
    mysql: "rbd",
    mongo: "rbd",
    config_server: "cephfs",
  },
{%  elif nfs_enabled == "true" %}
  storage_config: {
    mysql: "nfs",
    mongo: "nfs",
    config_server: "nfs",
  },
{%  else %}
    storage_config: {
      mysql: "hostPath",
      mongo: "hostPath",
      config_server: "hostPath",
},
{% endif %}
  misc: {
    mysql_storage: "mysql",
    upload_template: true,
    tf_url: "cc-tensorflow.cc-dev:8821",
  },
}
